version: '3.8'

services:
  # PostgreSQL with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_DB: mergertracker
      POSTGRES_USER: mergertracker
      POSTGRES_PASSWORD: mergertracker_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/scripts:/docker-entrypoint-initdb.d
    networks:
      - mergertracker-network

  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mergertracker-network

  # FastAPI backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://mergertracker:mergertracker_password@postgres:5432/mergertracker
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - mergertracker-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Scraper service
  scraper:
    build:
      context: ./backend
      dockerfile: Dockerfile.scraper
    environment:
      - DATABASE_URL=postgresql://mergertracker:mergertracker_password@postgres:5432/mergertracker
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - mergertracker-network

  # React frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - mergertracker-network
    command: npm start

volumes:
  postgres_data:
  redis_data:

networks:
  mergertracker-network:
    driver: bridge